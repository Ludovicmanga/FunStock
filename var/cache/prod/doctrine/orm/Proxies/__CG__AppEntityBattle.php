<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Battle extends \App\Entity\Battle implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'attacker', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'defender', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'loser', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'winner', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'state', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'accepted', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'stock', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'battleDate', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'amount', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'stockVariationDirectionPrediction'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'attacker', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'defender', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'loser', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'winner', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'state', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'accepted', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'stock', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'battleDate', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'amount', '' . "\0" . 'App\\Entity\\Battle' . "\0" . 'stockVariationDirectionPrediction'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Battle $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttacker(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttacker', []);

        return parent::getAttacker();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttacker(?\App\Entity\User $attacker): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttacker', [$attacker]);

        return parent::setAttacker($attacker);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefender(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefender', []);

        return parent::getDefender();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefender(?\App\Entity\User $defender): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefender', [$defender]);

        return parent::setDefender($defender);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoser', []);

        return parent::getLoser();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoser(?\App\Entity\User $loser): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoser', [$loser]);

        return parent::setLoser($loser);
    }

    /**
     * {@inheritDoc}
     */
    public function getWinner(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWinner', []);

        return parent::getWinner();
    }

    /**
     * {@inheritDoc}
     */
    public function setWinner(?\App\Entity\User $winner): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWinner', [$winner]);

        return parent::setWinner($winner);
    }

    /**
     * {@inheritDoc}
     */
    public function getState(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setState(string $state): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccepted(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccepted', []);

        return parent::getAccepted();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccepted(?bool $accepted): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccepted', [$accepted]);

        return parent::setAccepted($accepted);
    }

    /**
     * {@inheritDoc}
     */
    public function getStock(): ?\App\Entity\Stock
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStock', []);

        return parent::getStock();
    }

    /**
     * {@inheritDoc}
     */
    public function setStock(?\App\Entity\Stock $stock): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStock', [$stock]);

        return parent::setStock($stock);
    }

    /**
     * {@inheritDoc}
     */
    public function getBattleDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBattleDate', []);

        return parent::getBattleDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBattleDate(\DateTimeInterface $battleDate): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBattleDate', [$battleDate]);

        return parent::setBattleDate($battleDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', []);

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount(string $amount): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', [$amount]);

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockVariationDirectionPrediction(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockVariationDirectionPrediction', []);

        return parent::getStockVariationDirectionPrediction();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockVariationDirectionPrediction(string $stockVariationDirectionPrediction): \App\Entity\Battle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockVariationDirectionPrediction', [$stockVariationDirectionPrediction]);

        return parent::setStockVariationDirectionPrediction($stockVariationDirectionPrediction);
    }

}
